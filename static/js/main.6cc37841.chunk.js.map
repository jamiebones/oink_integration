{"version":3,"sources":["App.js","assets/oink.jpeg","BottomApp.js","reportWebVitals.js","index.js"],"names":["web3Modal","BottomAppStyles","styled","div","BottomApp","className","trimAddress","address","firstpart","slice","endpart","length","dateConverter","secs","sec_num","parseInt","Math","floor","map","v","filter","i","join","contractAddress","INFURA_ID","AppStyles","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","display","logo","name","description","appName","networkUrl","chainId","WalletLink","connector","_","a","walletLink","provider","makeWeb3Provider","enable","window","Web3Modal","network","cacheProvider","App","bscAddress","ethers","providers","JsonRpcProvider","useState","totalSupply","setTotalSupply","circulatingSupply","setCirculatingSupply","availableSupply","setAvailableSupply","bscBalance","setBscBalance","ointTokenBalance","setOinktokenBalance","signer","setSigner","setBscApprovedAmount","bscStakeText","setBscStateText","myOinkStake","setMyOinkStake","userBscStaked","setUserBUSDStaked","tokenPrice","setTokenPrice","totalStakedToken","setTotalStakedToken","userUnclaimedToken","setUserUnclaimedToken","userUnclaimTokenMinting","setUserUnclaimTokenMinting","tokenToStake","setTokenToStake","totalSoldToday","setTodaySoldToday","totalAvailableToSell","setTodayAvailableToSellToday","getTimeToNextDay","setTimeToNextDay","oinkToSell","setOinkToSell","contractBUSDBalance","setContractBUSDBalance","userTokenBalance","setUserTokenBalance","setProvider","web3Provider","setweb3Provider","setAddress","setChainId","connect","useCallback","Web3Provider","getSigner","getAddress","getNetwork","disconnect","clearCachedProvider","contract","Contract","ABI","bscContract","BSCABI","Promise","all","balanceOf","getUserBUSDBalance","limitSupply","getUserTokenStaked","getUserBUSDStaked","getUserTokenBalance","getTokenPrice","totalTokenStaked","getUserUnclaimedTokens_T","getUserUnclaimedTokens_M","getTokenSoldToday","getTokenAvailableToSell","getContractBUSDBalance","oinkbalance","total","supply","userBscBal","parseFloat","utils","formatEther","toFixed","formatUnits","toString","tokenCorrectedDecimal","useEffect","cachedProvider","on","handleAccountsChanged","accounts","console","log","handleChainChanged","_hexChainId","location","reload","handleDisconnect","error","removeListener","loadDetails","claimOinkTokensMinted","oinkContract","claimToken_M","alert","message","claimOinkTokensStaked","claimToken_T","approveBSCTokenWithdrawal","approve","parseEther","stakeBSCToken","stakeBUSD","stakeOinkToken","stakeToken","unstackedToken","unStakeToken","sellOinkToken","sellToken","href","src","alt","width","height","type","onClick","placeholder","onChange","e","target","value","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cc37841.chunk.js","sourcesContent":["import { useEffect, useState, useCallback } from \"react\";\nimport { ethers, providers } from \"ethers\";\nimport Web3Modal from \"web3modal\";\nimport styled from \"styled-components\";\nimport ABI from \"./utils/abi.json\";\nimport BSCABI from \"./utils/bsc.json\";\nimport \"./index.css\";\n\nimport WalletConnectProvider from '@walletconnect/web3-provider'\nimport WalletLink from 'walletlink';\n\nimport logo from \"./assets/oink.jpeg\";\n\nimport BottomApp from \"./BottomApp\";\n\n\nconst trimAddress = ( address ) => {\n  const firstpart = address.slice(0, 4);\n  const midpart = \"....\";\n  const endpart = address.slice(address.length - 4, address.length );\n  return `${firstpart}${midpart}${endpart}`\n}\n\nconst dateConverter = (secs) => {\n  var sec_num = parseInt(secs, 10)\n  var hours   = Math.floor(sec_num / 3600)\n  var minutes = Math.floor(sec_num / 60) % 60\n  var seconds = sec_num % 60\n\n  return [hours,minutes,seconds]\n      .map(v => v < 10 ? \"0\" + v : v)\n      .filter((v,i) => v !== \"00\" || i > 0)\n      .join(\":\")\n}\n\n\nconst contractAddress = \"0x12855d8B8eB0FC99a775eFf2c7e3A02005d89c4A\";\nconst addressZero =     \"0x0000000000000000000000000000000000000000\";\n\nconst INFURA_ID = '460f40a260564ac4a4f4b3fffb032dad'\n\nconst AppStyles =  styled.div`\n.navbar-light{\n  background: #5EBEC4 !important;\n}\n   .display-div {\n     height: 400px;\n     background: #f3ABB9;\n     border-radius:20px;\n    .display-divHeading{\n      height: 150px;\n      background: #c0c0c0;\n      border-radius: 20px 20px 0 0;\n      padding: 20px;\n     .heading-para {\n       font-size: 20px;\n       font-weight: bold;\n       color: #e20b0b;\n     }\n     .para-small{\n       font-size: 15px;\n     }\n    }\n    .para-details{\n      font-size: 20px;\n      color: #2910f9;\n    }\n    .para-detailsBig{\n      font-size: 20px;\n      color: #260b2f;\n    }\n   }\n   .div-price{\n     margin: 20px;\n   }\n\n   .div-card{\n     background: #f3ABB9;\n     height: 670px;\n     border-radius:20px;\n     margin: 30px 0 30px 0;\n     \n   }\n\n   .div-one{\n      height: 170px;\n      padding: 20px;\n   }\n\n   .div-two{\n    background: #c0c0c0;\n    height: 140px;\n    padding: 20px;\n    span{\n      float: right;\n    }\n   }\n\n   .div-three{\n     padding: 20px;\n   }\n\n   .heading{\n     font-size: 18px;\n     color: #1205e2;\n   }\n\n   .but-margin{\n      margin-top: 40px;\n      margin-left: 10px;\n   }\n   .btn-sec{\n     margin-top: 65px;\n     margin-left: 5px;\n   }\n\n   .btn-space{\n     margin-left: 5px;\n   }\n   .im{\n     color: purple;\n   }\n\n   .price{\n     font-size: 20px;\n   }\n\n   .time{\n     font-size: 20px;\n   }\n\n`\n\n\n//const INFURA_ID = '460f40a260564ac4a4f4b3fffb032dad'\n\n\n\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider, // required\n    options: {\n      infuraId: INFURA_ID, // required\n    },\n  },\n  'custom-walletlink': {\n    display: {\n      logo: 'https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0',\n      name: 'Coinbase',\n      description: 'Connect to Coinbase Wallet (not Coinbase App)',\n    },\n    options: {\n      appName: 'Coinbase', // Your app name\n      networkUrl: `https://mainnet.infura.io/v3/${INFURA_ID}`,\n      chainId: 1,\n    },\n    package: WalletLink,\n    connector: async (_, options) => {\n      const { appName, networkUrl, chainId } = options\n      const walletLink = new WalletLink({\n        appName,\n      })\n      const provider = walletLink.makeWeb3Provider(networkUrl, chainId)\n      await provider.enable()\n      return provider\n    },\n  },\n}\n\nlet web3Modal\nif (typeof window !== 'undefined') {\n  web3Modal = new Web3Modal({\n    network: 'mainnet', // optional\n    cacheProvider: true,\n    providerOptions, // required\n  })\n}\n\n\nfunction App() {\nconst bscAddress = \"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\";\nconst url = 'https://bsc-dataseed.binance.org/';\n const customHttpProvider = new ethers.providers.JsonRpcProvider(url);\n\n //state of the application\n const [ totalSupply, setTotalSupply ] = useState(\"0.0000\");\n const [ circulatingSupply, setCirculatingSupply ] = useState(\"0.0000\");\n const [availableSupply, setAvailableSupply ] = useState(\"0.0000\");\n const [ connectedAddress, setConnectedAddress ] = useState(\"\");\n const [ bscBalance, setBscBalance ] = useState(\"0.0000\");\n const [ ointTokenBalance, setOinktokenBalance ] = useState(\"0.0000\");\n const [signer, setSigner ] = useState(null);\n\n const [bscApprovedAmount, setBscApprovedAmount ] = useState(\"0.00\");\n const [bscStakeText, setBscStateText ] = useState(\"0\");\n\n const [myOinkStake, setMyOinkStake ] = useState(\"0\");\n const [totalOinkStake, setTotalOinkStake ] = useState(\"0\")\n\n const [userBscStaked, setUserBUSDStaked ] = useState(\"0\");\n const [totalBscStaked, setTotalBscStaked ] = useState(\"0\")\n\n const [tokenPrice, setTokenPrice ] = useState(\"0\");\n const [totalStakedToken, setTotalStakedToken ] = useState(\"0\");\n\n const [userUnclaimedToken, setUserUnclaimedToken ] = useState(\"0\");\n const [userUnclaimTokenMinting, setUserUnclaimTokenMinting ] = useState(\"0\");\n\n const [tokenToStake, setTokenToStake ] = useState(\"0\");\n\n const [totalSoldToday, setTodaySoldToday ] = useState(\"0\");\n\n const [totalAvailableToSell, setTodayAvailableToSellToday] = useState(\"0\");\n \n const [getTimeToNextDay, setTimeToNextDay] = useState(\"0\");\n\n const [oinkToSell, setOinkToSell] = useState(\"0\");\n\n const [contractBUSDBalance, setContractBUSDBalance] = useState(\"0\");\n\n const [userTokenBalance, setUserTokenBalance] = useState(\"0\");\n\n\n \n \n\n\n\nconst [provider, setProvider] = useState(\"\");\nconst [web3Provider, setweb3Provider] = useState(\"\");\nconst [address, setAddress] = useState(\"\");\nconst [chainId, setChainId] = useState(\"\");\n\n\n\nconst connect = useCallback(async function () {\n  // This is the initial `provider` that is returned when\n  // using web3Modal to connect. Can be MetaMask or WalletConnect.\n  const provider = await web3Modal.connect();\n  // We plug the initial `provider` into ethers.js and get back\n  // a Web3Provider. This will add on methods from ethers.js and\n  // event listeners such as `.on()` will be different.\n  const web3Provider = new providers.Web3Provider(provider);\n\n  const signer = web3Provider.getSigner()\n  const address = await signer.getAddress()\n\n  const network = await web3Provider.getNetwork();\n\n  setAddress(address);\n  setProvider(provider);\n  setweb3Provider(web3Provider);\n  setChainId(chainId);\n  setSigner(signer);\n}, []);\n\n\n\nconst disconnect = useCallback(\n  async function () {\n    await web3Modal.clearCachedProvider()\n    if (provider?.disconnect && typeof provider.disconnect === 'function') {\n      await provider.disconnect()\n    }\n    //reset the state here\n    setAddress(\"\");\n    setProvider(\"\");\n    setweb3Provider(\"\");\n    setChainId(\"\")\n  },\n  [provider]\n)\n\n\n\n  // Auto connect to the cached provider\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      connect()\n    }\n  }, [connect]);\n\n   // A `provider` should come with EIP-1193 events. We'll listen for those events\n  // here so that when a user switches accounts or networks, we can update the\n  // local React state with that new information.\n  useEffect(() => {\n    if (provider?.on) {\n      const handleAccountsChanged = (accounts) => {\n        // eslint-disable-next-line no-console\n        console.log('accountsChanged', accounts);\n        setAddress(accounts[0])\n      }\n\n      // https://docs.ethers.io/v5/concepts/best-practices/#best-practices--network-changes\n      const handleChainChanged = (_hexChainId) => {\n        window.location.reload()\n      }\n\n      const handleDisconnect = (error) => {\n        // eslint-disable-next-line no-console\n        console.log('disconnect', error)\n        disconnect()\n      }\n\n      provider.on('accountsChanged', handleAccountsChanged)\n      provider.on('chainChanged', handleChainChanged)\n      provider.on('disconnect', handleDisconnect)\n\n      // Subscription Cleanup\n      return () => {\n        if (provider.removeListener) {\n          provider.removeListener('accountsChanged', handleAccountsChanged)\n          provider.removeListener('chainChanged', handleChainChanged)\n          provider.removeListener('disconnect', handleDisconnect)\n        }\n      }\n    }\n  }, [provider, disconnect])\n\n\n\n\n async function loadDetails (){\n   //const provider = new ethers.providers.JsonRpcProvider(url);\n   const contract = new ethers.Contract(contractAddress, ABI, web3Provider );\n   const bscContract = new ethers.Contract(bscAddress, BSCABI, web3Provider );\n   //get the balance of OINT token\n\n   let [ oinkbalance, bscBalance, total, \n        availableSupply, supply, myOinkStake,\n        userBscBal, userBscStaked, userTokenBalance, \n        tokenPrice, totalStakedToken, userUnclaimedToken,\n        userUnclaimTokenMinting,\n        totalSoldToday,\n        totalAvailableToSell,\n        getTimeToNextDay,\n        contractBUSDBalance,\n        \n\n         ] = await Promise.all([\n    bscContract.balanceOf(address),\n    contract.getUserBUSDBalance( address),\n    contract.totalSupply(),\n    contract.availableSupply(),\n    contract.limitSupply(),\n    contract.getUserTokenStaked(address),\n    contract.getUserBUSDBalance(address),\n    contract.getUserBUSDStaked(address),\n    contract.getUserTokenBalance(address),\n    contract.getTokenPrice(),\n    contract.totalTokenStaked(),\n    contract.getUserUnclaimedTokens_T(address),\n    contract.getUserUnclaimedTokens_M(address),\n    contract.getTokenSoldToday(),\n    contract.getTokenAvailableToSell(),\n    contract.getTimeToNextDay(),\n    contract.getContractBUSDBalance(),\n  \n\n   ])\n\n  \n   //parse the values here\n   oinkbalance = parseFloat(ethers.utils.formatEther(oinkbalance)).toFixed(2);\n   bscBalance = parseFloat(ethers.utils.formatEther(bscBalance)).toFixed(2);\n   total = parseFloat(ethers.utils.formatEther(total)).toFixed(2);\n   availableSupply = parseFloat(ethers.utils.formatEther(availableSupply)).toFixed(2);\n   supply = parseFloat(ethers.utils.formatEther(supply)).toFixed(2);\n   myOinkStake = parseFloat(ethers.utils.formatEther(myOinkStake)).toFixed(2)\n   userBscBal = parseFloat(ethers.utils.formatEther(userBscBal)).toFixed(2)\n   userBscStaked = parseFloat(ethers.utils.formatEther(userBscStaked)).toFixed(2)\n   userTokenBalance = parseFloat(ethers.utils.formatEther(userTokenBalance)).toFixed(2)\n   tokenPrice = ethers.utils.formatUnits(tokenPrice, \"18\");\n   totalStakedToken = parseFloat(ethers.utils.formatEther(totalStakedToken)).toFixed(2)\n   userUnclaimedToken = parseFloat(ethers.utils.formatEther(userUnclaimedToken)).toFixed(2)\n   userUnclaimTokenMinting = parseFloat(ethers.utils.formatEther(userUnclaimTokenMinting)).toFixed(2)\n   totalSoldToday = parseFloat(ethers.utils.formatEther(totalSoldToday)).toFixed(2);\n   totalAvailableToSell = parseFloat(ethers.utils.formatEther(totalAvailableToSell)).toFixed(2);\n   \n   getTimeToNextDay = getTimeToNextDay.toString();\n\n   contractBUSDBalance = parseFloat(ethers.utils.formatEther(contractBUSDBalance)).toFixed(2);\n\n\n   let tokenCorrectedDecimal = parseFloat(tokenPrice).toFixed(7);\n\n    setTotalSupply(total);\n    setCirculatingSupply(supply);\n    setAvailableSupply(availableSupply);\n    setBscBalance(bscBalance);\n    setOinktokenBalance(oinkbalance);\n    setMyOinkStake(myOinkStake)\n    setTokenPrice(tokenCorrectedDecimal)\n    setTotalStakedToken(totalStakedToken)\n    setUserUnclaimedToken(userUnclaimedToken);\n    setUserUnclaimTokenMinting(userUnclaimTokenMinting);\n    setTodaySoldToday(totalSoldToday)\n    setTodayAvailableToSellToday(totalAvailableToSell)\n    setTimeToNextDay(getTimeToNextDay)\n    setUserTokenBalance(userTokenBalance);\n    setUserBUSDStaked(userBscStaked);\n\n    setContractBUSDBalance(contractBUSDBalance);\n\n    \n }\n\n useEffect(()=> {\n   if (web3Provider){\n    loadDetails();\n   }\n   \n }, [web3Provider]);\n\n const claimOinkTokensMinted = async () => {\n  const oinkContract = new ethers.Contract(contractAddress, ABI, web3Provider );\n  try {\n  await oinkContract.connect(signer).claimToken_M();\n  alert(\"Minted token claimed\")\n  } catch (error) {\n    alert(`There was an error : ${error.message}`);\n  }\n }\n\n const claimOinkTokensStaked = async () => {\n  const oinkContract = new ethers.Contract(contractAddress, ABI, web3Provider );\n  try {\n  await oinkContract.connect(signer).claimToken_T();\n  alert(\"Staked token claimed\")\n  } catch (error) {\n    alert(`There was an error : ${error.message}`);\n  }\n }\n\n const approveBSCTokenWithdrawal = async () => {\n   const bscContract = new ethers.Contract(bscAddress, BSCABI, web3Provider );\n   await bscContract.connect(signer).approve( contractAddress,ethers.utils.parseEther(ointTokenBalance));\n   alert(`Approval granted to OINK token to spend funds on behalf of ${address}`);\n }\n\n const stakeBSCToken = async () => {\n  const oinkContract = new ethers.Contract(contractAddress, ABI, web3Provider );\n  try {\n    await oinkContract.connect(signer).stakeBUSD(addressZero, ethers.utils.parseEther(bscStakeText));\n    alert(\"BSC token staked\");\n  } catch (error) {\n    console.log(error)\n    alert(`There was an error please try again. ${error.message}`)\n  }\n \n }\n\n\n const stakeOinkToken = async () => {\n  const oinkContract = new ethers.Contract(contractAddress, ABI, web3Provider );\n  try {\n    await oinkContract.connect(signer).stakeToken(ethers.utils.parseEther(tokenToStake));\n    alert(\"Oink token staked\");\n  } catch (error) {\n    console.log(error)\n    alert(`There was an error please try again. ${error.message}`)\n  }\n }\n\n const unstackedToken = async () => {\n  const oinkContract = new ethers.Contract(contractAddress, ABI, web3Provider );\n  try {\n    await oinkContract.connect(signer).unStakeToken();\n    alert(\"Oink token un staked\");\n  } catch (error) {\n    console.log(error)\n    alert(`There was an error please try again. ${error.message}`)\n  }\n }\n\n const sellOinkToken = async ( ) => {\n  const oinkContract = new ethers.Contract(contractAddress, ABI, web3Provider );\n  try {\n    await oinkContract.connect(signer).sellToken(ethers.utils.parseEther(oinkToSell));\n    alert(\"Oink token sold\");\n  } catch (error) {\n    console.log(error)\n    alert(`There was an error please try again. ${error.message}`)\n  }\n }\n\n \n\n\n  return (\n    <AppStyles>\n    <div className=\"container-fluid\">\n      <nav className=\"navbar navbar-light bg-light\">\n        <div className=\"container-fluid\">\n          \n          <a className=\"navbar-brand\" href=\"#\">\n             <img src={logo} alt=\"\" width=\"50\" height=\"34\" className=\"im d-inline-block align-text-top\"/>\n             $OINK NETWORK\n          </a>\n          <form className=\"d-flex\">\n          \n             {web3Provider ? (\n               <button className=\"btn btn-danger\" type=\"button\" onClick={disconnect}>\n                 {trimAddress(address)}\n          </button>\n        ) : (\n          <button className=\"btn btn-success\" type=\"button\" onClick={connect}>\n            Connect\n          </button>\n        )}\n          </form>\n        </div>\n      </nav>\n\n      <div className=\"row\">\n       \n        <div className=\"col-md-8 offset-md-2\">\n            <div className=\"display-div\">\n                <div className=\"display-divHeading\">\n                     <p className=\"heading-para\">\n                        OINK NETWORK STATISTICS\n                     </p>\n\n                     <p className=\"para-small\">\n                       Stake $BUSD and earn daily staking rewards\n\n                     </p>\n\n                     <p className=\"para-small\">\n                        Stake $OINK and earn daily staking rewards\n                     </p>\n                </div>\n\n                \n                    <div className=\"d-flex align-items-center flex-column div-price\">\n                    <p className=\"para-details\">$OINK Price</p>\n                    <p className=\"price\">{tokenPrice}</p>\n              \n                  \n                </div>\n\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-3 offset-md-1\">\n                          <p className=\"para-details\">Total supply</p>\n                          <p className=\"para-detailsBig\">\n                          {circulatingSupply}\n                          </p>\n                    </div>\n\n                    <div className=\"col-md-4\">\n                        <p className=\"para-details\">Circulating Supply</p>\n                        <p className=\"para-detailsBig\">\n                        {totalSupply}\n                        </p>\n                      </div>\n\n                      <div className=\"col-md-4\">\n                         <p className=\"para-details\">Available Supply</p>\n                         <p className=\"para-detailsBig\">{availableSupply}</p>\n                      </div>\n                </div>\n\n            </div>\n           \n        </div>\n   \n      </div>\n\n      <div className=\"row align-items-start\">\n        <div className=\"col-md-8 offset-md-2\">\n           <div className=\"row\">\n               <div className=\"col-md-4\">\n                   <div className=\"div-card\">\n                       <div className=\"div-one\">\n                           <p className=\"heading\">MINT $OINK</p>\n                            \n                           <p>\n                              Mint $OINK by staking your $BUSD\n                              You can stake as many times as you want\n                              You cannot unstake your $BUSD\n                           </p>\n                       </div>\n                       <div className=\"div-two\">\n                         <p>APR <span>1460%</span></p>\n                         <p>My Stake <span>{userBscStaked } BUSD</span></p>\n                         <p>Total Staked <span>{contractBUSDBalance} $BUSD</span></p>\n                       </div>\n                       <div className=\"div-three\">\n                            <p className=\"heading\">$OINK Minted</p>\n\n                            <div className=\"d-flex justify-content-between\">\n                               <p className=\"para-details align-self-center\">\n                                 {userUnclaimTokenMinting}\n                               </p>\n\n                               <p>\n                                 <button className=\"btn btn-primary\" \n                                   onClick={claimOinkTokensMinted} type=\"button\">\n                                    Claim\n                                 </button>\n                               </p>\n                            </div>\n\n                            <div>\n                            \n                            <p>Approve & BUSD </p>\n                            <div className=\"input-group mb-3\">\n                              \n                             <input type=\"text\" className=\"form-control\" placeholder=\"Amount to approve\" \n                            aria-label=\"Amount to approve\" aria-describedby=\"approve\" onChange={\n                             (e)=>setBscApprovedAmount(e.target.value)\n                             }/>\n                            <button className=\"btn btn-primary\" type=\"button\" \n                            id=\"approve\" onClick={approveBSCTokenWithdrawal} >Approve</button>\n                           </div>\n                              \n                            </div>\n\n\n                            <div>\n                            <p>No Minimum Amount</p>\n                            <div className=\"input-group mb-3\">\n                              \n                             \n                           <div className=\"input-group\">\n                              <input type=\"text\" className=\"form-control\" placeholder=\"Amount to stake\" \n                            aria-label=\"Amount to stake\" aria-describedby=\"approve\" type=\"number\" value={bscStakeText}\n                            className=\"form-control\" onChange={\n                              (e)=>setBscStateText(e.target.value)}/>\n\n                               <button className=\"btn btn-primary\" type=\"button\" onClick={()=>setBscStateText(bscBalance)}>Max</button>\n                                \n                                <button className=\"btn btn-success\" type=\"button\" onClick={stakeBSCToken} >Stake</button>\n                            </div>\n\n\n                           </div>\n\n                            </div>\n\n\n\n                       </div>\n                       <p className=\"text-center\">Wallet Balance: {bscBalance} $BUSD </p>\n                   </div>\n               </div>\n\n               <div className=\"col-md-4\">\n               <div className=\"div-card\">\n                    <div className=\"div-one\">\n\n                      <p className=\"heading\">STAKE $OINK</p>\n                            \n                           <p>\n                              Stake $OINK to earn more $DUCK\n                              You can stake as many times as you want\n                              You can unstake your $DUCK after 7 days\n                           </p>\n                       </div>\n\n\n                       <div className=\"div-two\">\n                         <p>APR <span>1460%</span></p>\n                         <p>My Stake <span>{myOinkStake} OINK</span></p>\n                         <p>Total Staked <span>{totalStakedToken} OINK</span></p>\n                       </div>\n                       <div className=\"div-three\">\n                            <p className=\"float-right\">\n                              <button className=\"btn btn-success\" onClick={unstackedToken}>\n                                   unstaked\n                              </button>\n                            \n                            </p>\n\n\n                            <p className=\"heading\">$OINK Earned</p>\n\n                            <div className=\"d-flex justify-content-between\">\n                               <p className=\"para-details align-self-center\">\n                                 {userUnclaimedToken}\n                               </p>\n\n                               <p>\n                                 <button className=\"btn btn-primary\" \n                                   onClick={claimOinkTokensStaked} type=\"button\">\n                                    Claim\n                                 </button>\n                               </p>\n                            </div>\n\n                           \n\n\n                            <div>\n                                <p>No Minimum Amount</p>\n                                  \n                             \n                           <div className=\"input-group\">\n                             \n                               <input type=\"text\" type=\"number\" value={tokenToStake}\n                                   className=\"form-control\" onChange={\n                                     (e)=>setTokenToStake(e.target.value)\n                                   }/>\n\n                               <button className=\"btn btn-primary\" type=\"button\" onClick={()=>setTokenToStake(bscBalance)} type=\"button\">\n                                    MAX</button>\n                                \n                                <button className=\"btn btn-success\" type=\"button\"  onClick={stakeOinkToken} type=\"button\">\n                                    STAKE\n                                </button>\n                            </div>\n\n                            </div>\n\n\n\n                       </div>\n                       <p className=\"text-center\">Wallet Balance: {userTokenBalance} $OINK </p>\n                   </div>\n                </div>\n\n\n\n                <div className=\"col-md-4\">\n                <div className=\"div-card\">\n                       <div className=\"div-one\">\n\n                           <p className=\"heading\">SELL $OINK</p>\n                            \n                           <p>\n                             Sell the earned tokens\n                             Only 40000 tokens can be sold per day\n                             Earn $BUSD\n                           </p>\n                       </div>\n                       \n\n\n\n                       <div className=\"div-two\">\n                         <p>Sold Today <span>{totalSoldToday}</span></p>\n                         <p>Available Today <span>{totalAvailableToSell}</span></p>\n                         <p>Reset in <span className=\"time\">{dateConverter(getTimeToNextDay)}</span></p>\n                       </div>\n                       <div className=\"div-three\">\n                           \n                           <div className=\"text-center\">\n                              <p>$OINK PRICE</p>\n\n                              <p> {tokenPrice} $BUSD</p>\n                           </div>\n                           \n                          \n                          <p>You will get</p>\n                                   \n                            <div className=\"input-group\">\n                             \n                                 <input type=\"text\" type=\"number\" value={oinkToSell}\n                                   className=\"form-control\" onChange={\n                                     (e)=>setOinkToSell(e.target.value)\n                                   }/>\n\n                                \n                              <button className=\"btn btn-success\" \n                                   onClick={sellOinkToken} type=\"button\">\n                                    SELL\n                                 </button>\n                            </div>\n\n\n\n                       </div>\n                       <p className=\"text-center\">Wallet Balance: {userTokenBalance} $OINK </p>\n                   </div>\n                </div>\n\n              \n\n           </div>\n      </div>\n    </div>\n\n    <div className=\"row align-items-start\">\n        <div className=\"col-md-8 offset-md-2\">\n           <div className=\"row\">\n             <BottomApp />\n         </div>\n      </div>\n      </div>\n\n\n\n    </div>\n    </AppStyles>\n  );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/oink.7b54d82c.jpeg\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst BottomAppStyles = styled.div`\r\n    background: #c0c0c0;\r\n    padding: 20px;\r\n  \r\n    .head-para{\r\n       font-size: 40px;\r\n       text-align: center;\r\n       color: purple;\r\n    }\r\n\r\n    p{\r\n        padding: 5px;\r\n        font-size: 15px;\r\n    }\r\n\r\n    .para-details{\r\n        font-size: 30px;\r\n        color: purple;\r\n    }\r\n\r\n    .card{\r\n        padding: 20px;\r\n        background: #EFEFEF;\r\n    }\r\n\r\n\r\n`\r\n\r\n\r\nconst BottomApp = () => {\r\n    return <BottomAppStyles>\r\n<div className=\"card\">\r\n<p>\r\n  OinK Network Token Address- 0x4eACB72F6BA99e1C69ac053dcb281387fF374d22\r\n</p>\r\n<p>\r\n  Started on: January 25,2022 at 2PM UTC\r\n</p>\r\n\r\n<div className=\"div-terms\">\r\n     <p className=\"head-para\">Guide</p>\r\n\r\n     <p>\r\n     Stake BUSD and earn Daily Staking Rewards in OINK TOKEN (4% per day).You can claim your $OINK rewards anytime. You cannot unstake your staked BUSD.\r\n(You will earn $OINK tokens as a percentage of BUSD invested irrespective of the $OINK Price.)\r\nExample: If you invest 100 BUSD, you will receive 4 OINK TOKEN daily.\r\n     </p>\r\n\r\n     <p>\r\n       You have two options with your $OINK tokens, you can sell them for BUSD, or you can stake them to earn more $OINK tokens (6% per day).\r\n    $OINK staking is locked for 7 days.\r\n     </p>\r\n        \r\n     <p className=\"text-center para-details\">Terminologies</p>\r\n    \r\n     \r\n  <p>Total Supply : The maximum amount of $OINK that can exist</p>\r\n  <p>Circulating Supply : The amount of $OINK tokens that are currently in wallets</p>\r\n  <p>Available Suppy : (Total Supply - Cirulating Supply)</p>\r\n  <p>$OINK Price : (Total BUSD Balance / Available Supply)</p>\r\n  <p>Mint $OINK - As you claim $OINK from minting, it is removed from the Available Supply and added to the Circulating Supply</p>\r\n  <p>Sell $OINK - As you sell $OINK, it is removed from the Circulating Supply and added to the Available Supply</p>\r\n  \r\n     \r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n</div>\r\n</BottomAppStyles>\r\n}\r\n\r\nexport default BottomApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}