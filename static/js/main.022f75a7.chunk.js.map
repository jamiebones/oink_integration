{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["web3Modal","trimAddress","address","firstpart","slice","endpart","length","contractAddress","INFURA_ID","AppStyles","styled","div","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","display","logo","name","description","appName","networkUrl","chainId","WalletLink","connector","_","a","walletLink","provider","makeWeb3Provider","enable","window","Web3Modal","network","cacheProvider","App","bscAddress","ethers","providers","JsonRpcProvider","useState","totalSupply","setTotalSupply","circulatingSupply","setCirculatingSupply","availableSupply","setAvailableSupply","bscBalance","setBscBalance","ointTokenBalance","setOinktokenBalance","signer","setSigner","setBscApprovedAmount","bscStakeText","setBscStateText","myOinkStake","setMyOinkStake","userBscStaked","totalBscStaked","tokenPrice","setTokenPrice","totalStakedToken","setTotalStakedToken","userUnclaimedToken","setUserUnclaimedToken","userUnclaimTokenMinting","setUserUnclaimTokenMinting","tokenToStake","setTokenToStake","totalSoldToday","setTodaySoldToday","totalAvailableToSell","setTodayAvailableToSellToday","getTimeToNextDay","setTimeToNextDay","oinkToSell","setOinkToSell","setProvider","web3Provider","setweb3Provider","setAddress","setChainId","connect","useCallback","Web3Provider","getSigner","getAddress","getNetwork","disconnect","clearCachedProvider","contract","Contract","ABI","bscContract","BSCABI","Promise","all","balanceOf","limitSupply","getUserTokenStaked","getUserBUSDBalance","getUserBUSDStaked","getUserTokenBalance","getTokenPrice","totalTokenStaked","getUserUnclaimedTokens_T","getUserUnclaimedTokens_M","getTokenSoldToday","getTokenAvailableToSell","oinkbalance","total","supply","userBscBal","userTokenBalance","parseFloat","utils","formatEther","toFixed","useEffect","cachedProvider","on","handleAccountsChanged","accounts","console","log","handleChainChanged","_hexChainId","location","reload","handleDisconnect","error","removeListener","loadDetails","claimOinkTokensMinted","oinkContract","claimToken_M","alert","message","claimOinkTokensStaked","claimToken_T","approveBSCTokenWithdrawal","approve","parseEther","stakeBSCToken","stakeBUSD","stakeOinkToken","stakeToken","unstackedToken","unStakeToken","sellOinkToken","sellToken","className","type","onClick","class","placeholder","onChange","e","target","value","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.022f75a7.chunk.js","sourcesContent":["import { useEffect, useState, useCallback } from \"react\";\nimport { ethers, providers } from \"ethers\";\nimport Web3Modal from \"web3modal\";\nimport styled from \"styled-components\";\nimport ABI from \"./utils/abi.json\";\nimport BSCABI from \"./utils/bsc.json\";\nimport \"./index.css\";\n\nimport WalletConnectProvider from '@walletconnect/web3-provider'\nimport WalletLink from 'walletlink'\n\n\nconst trimAddress = ( address ) => {\n  const firstpart = address.slice(0, 4);\n  const midpart = \"....\";\n  const endpart = address.slice(address.length - 4, address.length );\n  return `${firstpart}${midpart}${endpart}`\n}\n\n\nconst contractAddress = \"0x12855d8B8eB0FC99a775eFf2c7e3A02005d89c4A\";\nconst addressZero =     \"0x0000000000000000000000000000000000000000\";\n\nconst INFURA_ID = '460f40a260564ac4a4f4b3fffb032dad'\n\nconst AppStyles =  styled.div`\n.navbar-light{\n  background: #5EBEC4 !important;\n}\n   .display-div {\n     height: 400px;\n     background: #f92c85;\n     border-radius:20px;\n    .display-divHeading{\n      height: 150px;\n      background: #c0c0c0;\n      border-radius: 20px 20px 0 0;\n      padding: 20px;\n     .heading-para {\n       font-size: 20px;\n       font-weight: bold;\n       color: #e20b0b;\n     }\n     .para-small{\n       font-size: 15px;\n     }\n    }\n    .para-details{\n      font-size: 17px;\n      color: #fff;\n    }\n    .para-detailsBig{\n      font-size: 20px;\n      color: #260b2f;\n    }\n   }\n   .div-price{\n     margin: 20px;\n   }\n\n   .div-card{\n     background: #f92c85;\n     height: 670px;\n     border-radius:20px;\n     margin: 30px 0 30px 0;\n     \n   }\n\n   .div-one{\n      height: 170px;\n      padding: 20px;\n   }\n\n   .div-two{\n    background: #c0c0c0;\n    height: 140px;\n    padding: 20px;\n    span{\n      float: right;\n    }\n   }\n\n   .div-three{\n     padding: 20px;\n   }\n\n   .heading{\n     font-size: 18px;\n     color: #1205e2;\n   }\n\n   .but-margin{\n      margin-top: 40px;\n      margin-left: 10px;\n   }\n   .btn-sec{\n     margin-top: 65px;\n     margin-left: 5px;\n   }\n\n   .btn-space{\n     margin-left: 5px;\n   }\n\n`\n\n\n//const INFURA_ID = '460f40a260564ac4a4f4b3fffb032dad'\n\n\n\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider, // required\n    options: {\n      infuraId: INFURA_ID, // required\n    },\n  },\n  'custom-walletlink': {\n    display: {\n      logo: 'https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0',\n      name: 'Coinbase',\n      description: 'Connect to Coinbase Wallet (not Coinbase App)',\n    },\n    options: {\n      appName: 'Coinbase', // Your app name\n      networkUrl: `https://mainnet.infura.io/v3/${INFURA_ID}`,\n      chainId: 1,\n    },\n    package: WalletLink,\n    connector: async (_, options) => {\n      const { appName, networkUrl, chainId } = options\n      const walletLink = new WalletLink({\n        appName,\n      })\n      const provider = walletLink.makeWeb3Provider(networkUrl, chainId)\n      await provider.enable()\n      return provider\n    },\n  },\n}\n\nlet web3Modal\nif (typeof window !== 'undefined') {\n  web3Modal = new Web3Modal({\n    network: 'mainnet', // optional\n    cacheProvider: true,\n    providerOptions, // required\n  })\n}\n\n\nfunction App() {\nconst bscAddress = \"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\";\nconst url = 'https://bsc-dataseed.binance.org/';\n const customHttpProvider = new ethers.providers.JsonRpcProvider(url);\n\n //state of the application\n const [ totalSupply, setTotalSupply ] = useState(\"0.0000\");\n const [ circulatingSupply, setCirculatingSupply ] = useState(\"0.0000\");\n const [availableSupply, setAvailableSupply ] = useState(\"0.0000\");\n const [ connectedAddress, setConnectedAddress ] = useState(\"\");\n const [ bscBalance, setBscBalance ] = useState(\"0.0000\");\n const [ ointTokenBalance, setOinktokenBalance ] = useState(\"0.0000\");\n const [signer, setSigner ] = useState(null);\n\n const [bscApprovedAmount, setBscApprovedAmount ] = useState(\"0.00\");\n const [bscStakeText, setBscStateText ] = useState(\"0\");\n\n const [myOinkStake, setMyOinkStake ] = useState(\"0\");\n const [totalOinkStake, setTotalOinkStake ] = useState(\"0\")\n\n const [userBscStaked, setUserBscStaked ] = useState(\"0\");\n const [totalBscStaked, setTotalBscStaked ] = useState(\"0\")\n\n const [tokenPrice, setTokenPrice ] = useState(\"0\");\n const [totalStakedToken, setTotalStakedToken ] = useState(\"0\");\n\n const [userUnclaimedToken, setUserUnclaimedToken ] = useState(\"0\");\n const [userUnclaimTokenMinting, setUserUnclaimTokenMinting ] = useState(\"0\");\n\n const [tokenToStake, setTokenToStake ] = useState(\"0\");\n\n const [totalSoldToday, setTodaySoldToday ] = useState(\"0\");\n\n const [totalAvailableToSell, setTodayAvailableToSellToday] = useState(\"0\");\n \n const [getTimeToNextDay, setTimeToNextDay] = useState(\"0\");\n\n const [oinkToSell, setOinkToSell] = useState(\"0\");\n\n\n\nconst [provider, setProvider] = useState(\"\");\nconst [web3Provider, setweb3Provider] = useState(\"\");\nconst [address, setAddress] = useState(\"\");\nconst [chainId, setChainId] = useState(\"\");\n\n\n\nconst connect = useCallback(async function () {\n  // This is the initial `provider` that is returned when\n  // using web3Modal to connect. Can be MetaMask or WalletConnect.\n  const provider = await web3Modal.connect();\n  // We plug the initial `provider` into ethers.js and get back\n  // a Web3Provider. This will add on methods from ethers.js and\n  // event listeners such as `.on()` will be different.\n  const web3Provider = new providers.Web3Provider(provider);\n\n  const signer = web3Provider.getSigner()\n  const address = await signer.getAddress()\n\n  const network = await web3Provider.getNetwork();\n\n  setAddress(address);\n  setProvider(provider);\n  setweb3Provider(web3Provider);\n  setChainId(chainId);\n  setSigner(signer);\n}, []);\n\n\n\nconst disconnect = useCallback(\n  async function () {\n    await web3Modal.clearCachedProvider()\n    if (provider?.disconnect && typeof provider.disconnect === 'function') {\n      await provider.disconnect()\n    }\n    //reset the state here\n    setAddress(\"\");\n    setProvider(\"\");\n    setweb3Provider(\"\");\n    setChainId(\"\")\n  },\n  [provider]\n)\n\n\n\n  // Auto connect to the cached provider\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      connect()\n    }\n  }, [connect]);\n\n   // A `provider` should come with EIP-1193 events. We'll listen for those events\n  // here so that when a user switches accounts or networks, we can update the\n  // local React state with that new information.\n  useEffect(() => {\n    if (provider?.on) {\n      const handleAccountsChanged = (accounts) => {\n        // eslint-disable-next-line no-console\n        console.log('accountsChanged', accounts);\n        setAddress(accounts[0])\n      }\n\n      // https://docs.ethers.io/v5/concepts/best-practices/#best-practices--network-changes\n      const handleChainChanged = (_hexChainId) => {\n        window.location.reload()\n      }\n\n      const handleDisconnect = (error) => {\n        // eslint-disable-next-line no-console\n        console.log('disconnect', error)\n        disconnect()\n      }\n\n      provider.on('accountsChanged', handleAccountsChanged)\n      provider.on('chainChanged', handleChainChanged)\n      provider.on('disconnect', handleDisconnect)\n\n      // Subscription Cleanup\n      return () => {\n        if (provider.removeListener) {\n          provider.removeListener('accountsChanged', handleAccountsChanged)\n          provider.removeListener('chainChanged', handleChainChanged)\n          provider.removeListener('disconnect', handleDisconnect)\n        }\n      }\n    }\n  }, [provider, disconnect])\n\n\n\n\n async function loadDetails (){\n   //const provider = new ethers.providers.JsonRpcProvider(url);\n   const contract = new ethers.Contract(contractAddress, ABI, web3Provider );\n   const bscContract = new ethers.Contract(bscAddress, BSCABI, web3Provider );\n   //get the balance of OINT token\n\n   let [ oinkbalance, bscBalance, total, \n        availableSupply, supply, myOinkStake,\n        userBscBal, userBscStaked, userTokenBalance, \n        tokenPrice, totalStakedToken, userUnclaimedToken,\n        userUnclaimTokenMinting,\n        totalSoldToday,\n        totalAvailableToSell,\n        getTimeToNextDay\n\n         ] = await Promise.all([\n    bscContract.balanceOf(address),\n    bscContract.balanceOf( address),\n    contract.totalSupply(),\n    contract.availableSupply(),\n    contract.limitSupply(),\n    contract.getUserTokenStaked(address),\n    contract.getUserBUSDBalance(address),\n    contract.getUserBUSDStaked(address),\n    contract.getUserTokenBalance(address),\n    contract.getTokenPrice(),\n    contract.totalTokenStaked(),\n    contract.getUserUnclaimedTokens_T(address),\n    contract.getUserUnclaimedTokens_M(address),\n    contract.getTokenSoldToday(),\n    contract.getTokenAvailableToSell(),\n    contract.getTimeToNextDay()\n\n   ])\n\n\n   //parse the values here\n   oinkbalance = parseFloat(ethers.utils.formatEther(oinkbalance)).toFixed(2);\n   bscBalance = parseFloat(ethers.utils.formatEther(bscBalance)).toFixed(2);\n   total = parseFloat(ethers.utils.formatEther(total)).toFixed(2);\n   availableSupply = parseFloat(ethers.utils.formatEther(availableSupply)).toFixed(2);\n   supply = parseFloat(ethers.utils.formatEther(supply)).toFixed(2);\n   myOinkStake = parseFloat(ethers.utils.formatEther(myOinkStake)).toFixed(2)\n   userBscBal = parseFloat(ethers.utils.formatEther(userBscBal)).toFixed(2)\n   userBscStaked = parseFloat(ethers.utils.formatEther(userBscStaked)).toFixed(2)\n   userTokenBalance = parseFloat(ethers.utils.formatEther(userTokenBalance)).toFixed(2)\n   tokenPrice = parseFloat(ethers.utils.formatEther(tokenPrice)).toFixed(2);\n   totalStakedToken = parseFloat(ethers.utils.formatEther(totalStakedToken)).toFixed(2)\n   userUnclaimedToken = parseFloat(ethers.utils.formatEther(userUnclaimedToken)).toFixed(2)\n   userUnclaimTokenMinting = parseFloat(ethers.utils.formatEther(userUnclaimTokenMinting)).toFixed(2)\n   totalSoldToday = parseFloat(ethers.utils.formatEther(totalSoldToday)).toFixed(2);\n   totalAvailableToSell = parseFloat(ethers.utils.formatEther(totalAvailableToSell)).toFixed(2);\n   getTimeToNextDay = parseFloat(ethers.utils.formatEther(getTimeToNextDay)).toFixed(2);\n\n\n   //let totalSkakedBsc = \n\n  \n\n\n   //const [myOinkStake, setMyOinkStake ] = useState(\"0\");\n   //const [totalOinkStake, setTotalOinkStake ] = useState(\"0\")\n\n   //get the bsc contract \n    setTotalSupply(total);\n    setCirculatingSupply(supply);\n    setAvailableSupply(availableSupply);\n    setBscBalance(bscBalance);\n    setOinktokenBalance(oinkbalance);\n    setMyOinkStake(myOinkStake)\n    setTokenPrice(tokenPrice)\n    setTotalStakedToken(totalStakedToken)\n    setUserUnclaimedToken(userUnclaimedToken);\n    setUserUnclaimTokenMinting(userUnclaimTokenMinting);\n    setTodaySoldToday(totalSoldToday)\n    setTodayAvailableToSellToday(totalAvailableToSell)\n    setTimeToNextDay(getTimeToNextDay)\n\n    \n }\n\n useEffect(()=> {\n   if (web3Provider){\n    loadDetails();\n   }\n   \n }, [web3Provider]);\n\n const claimOinkTokensMinted = async () => {\n  const oinkContract = new ethers.Contract(contractAddress, ABI, web3Provider );\n  try {\n  await oinkContract.connect(signer).claimToken_M();\n  alert(\"Minted token claimed\")\n  } catch (error) {\n    alert(`There was an error : ${error.message}`);\n  }\n }\n\n const claimOinkTokensStaked = async () => {\n  const oinkContract = new ethers.Contract(contractAddress, ABI, web3Provider );\n  try {\n  await oinkContract.connect(signer).claimToken_T();\n  alert(\"Staked token claimed\")\n  } catch (error) {\n    alert(`There was an error : ${error.message}`);\n  }\n }\n\n const approveBSCTokenWithdrawal = async () => {\n   const bscContract = new ethers.Contract(bscAddress, BSCABI, web3Provider );\n   await bscContract.connect(signer).approve( contractAddress,ethers.utils.parseEther(ointTokenBalance));\n   alert(`Approval granted to OINK token to spend funds on behalf of ${address}`);\n }\n\n const stakeBSCToken = async () => {\n  const oinkContract = new ethers.Contract(contractAddress, ABI, web3Provider );\n  try {\n    await oinkContract.connect(signer).stakeBUSD(addressZero, ethers.utils.parseEther(bscStakeText));\n    \n    alert(\"BSC token staked\");\n  } catch (error) {\n    console.log(error)\n    alert(`There was an error please try again. ${error.message}`)\n  }\n \n }\n\n\n const stakeOinkToken = async () => {\n  const oinkContract = new ethers.Contract(contractAddress, ABI, web3Provider );\n  try {\n    await oinkContract.connect(signer).stakeToken(ethers.utils.parseEther(tokenToStake));\n    alert(\"Oink token staked\");\n  } catch (error) {\n    console.log(error)\n    alert(`There was an error please try again. ${error.message}`)\n  }\n }\n\n const unstackedToken = async () => {\n  const oinkContract = new ethers.Contract(contractAddress, ABI, web3Provider );\n  try {\n    await oinkContract.connect(signer).unStakeToken();\n    alert(\"Oink token un staked\");\n  } catch (error) {\n    console.log(error)\n    alert(`There was an error please try again. ${error.message}`)\n  }\n }\n\n const sellOinkToken = async ( ) => {\n  const oinkContract = new ethers.Contract(contractAddress, ABI, web3Provider );\n  try {\n    await oinkContract.connect(signer).sellToken(ethers.utils.parseEther(oinkToSell));\n    alert(\"Oink token sold\");\n  } catch (error) {\n    console.log(error)\n    alert(`There was an error please try again. ${error.message}`)\n  }\n }\n\n \n\n\n  return (\n    <AppStyles>\n    <div className=\"container-fluid\">\n      <nav className=\"navbar navbar-light bg-light\">\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\">$OINK</a>\n          <form className=\"d-flex\">\n          \n             {web3Provider ? (\n               <button className=\"btn btn-danger\" type=\"button\" onClick={disconnect}>\n                 {trimAddress(address)}\n          </button>\n        ) : (\n          <button className=\"btn btn-success\" type=\"button\" onClick={connect}>\n            Connect\n          </button>\n        )}\n          </form>\n        </div>\n      </nav>\n\n      <div className=\"row\">\n       \n        <div className=\"col-md-8 offset-md-2\">\n            <div className=\"display-div\">\n                <div className=\"display-divHeading\">\n                     <p className=\"heading-para\">\n                        OINK NETWORK STATISTICS\n                     </p>\n\n                     <p className=\"para-small\">\n                       Stake $BUSD and earn daily staking rewards\n\n                     </p>\n\n                     <p className=\"para-small\">\n                        Stake $OINK and earn daily staking rewards\n                     </p>\n                </div>\n\n                \n                    <div className=\"d-flex align-items-center flex-column div-price\">\n                    <p className=\"para-details\">$OINK Price</p>\n                    <p>{tokenPrice}</p>\n              \n                  \n                </div>\n\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-3 offset-md-1\">\n                          <p className=\"para-details\">Total supply</p>\n                          <p className=\"para-detailsBig\">\n                          {circulatingSupply}\n                          </p>\n                    </div>\n\n                    <div className=\"col-md-4\">\n                        <p className=\"para-details\">Circulating Supply</p>\n                        <p className=\"para-detailsBig\">\n                        {totalSupply}\n                        </p>\n                      </div>\n\n                      <div className=\"col-md-4\">\n                         <p className=\"para-details\">Available Supply</p>\n                         <p className=\"para-detailsBig\">{availableSupply}</p>\n                      </div>\n                </div>\n\n            </div>\n           \n        </div>\n   \n      </div>\n\n      <div className=\"row align-items-start\">\n        <div className=\"col-md-8 offset-md-2\">\n           <div className=\"row\">\n               <div className=\"col-md-4\">\n                   <div className=\"div-card\">\n                       <div className=\"div-one\">\n                           <p className=\"heading\">MINT $OINK</p>\n                            \n                           <p>\n                              Mint $OINK by staking your $BUSD\n                              You can stake as many times as you want\n                              You cannot unstake your $BUSD\n                           </p>\n                       </div>\n                       <div className=\"div-two\">\n                         <p>APR <span>1460%</span></p>\n                         <p>My Stake <span>{userBscStaked } BUSD</span></p>\n                         <p>Total Staked <span>{totalBscStaked} $BUSD</span></p>\n                       </div>\n                       <div className=\"div-three\">\n                            <p className=\"heading\">$OINK Minted</p>\n\n                            <div className=\"d-flex justify-content-between\">\n                               <p className=\"para-details align-self-center\">\n                                 {userUnclaimTokenMinting}\n                               </p>\n\n                               <p>\n                                 <button className=\"btn btn-primary\" \n                                   onClick={claimOinkTokensMinted} type=\"button\">\n                                    Claim\n                                 </button>\n                               </p>\n                            </div>\n\n                            <div>\n                            \n                            <p>Approve & BUSD </p>\n                            <div class=\"input-group mb-3\">\n                              \n                             <input type=\"text\" class=\"form-control\" placeholder=\"Amount to approve\" \n                            aria-label=\"Amount to approve\" aria-describedby=\"approve\" onChange={\n                             (e)=>setBscApprovedAmount(e.target.value)\n                             }/>\n                            <button class=\"btn btn-primary\" type=\"button\" \n                            id=\"approve\" onClick={approveBSCTokenWithdrawal} >Approve</button>\n                           </div>\n                              \n                            </div>\n\n\n                            <div>\n                            <p>No Minimum Amount</p>\n                            <div class=\"input-group mb-3\">\n                              \n                             \n                           <div class=\"input-group\">\n                              <input type=\"text\" class=\"form-control\" placeholder=\"Amount to stake\" \n                            aria-label=\"Amount to stake\" aria-describedby=\"approve\" type=\"number\" value={bscStakeText}\n                            className=\"form-control\" onChange={\n                              (e)=>setBscStateText(e.target.value)}/>\n\n                               <button class=\"btn btn-primary\" type=\"button\" onClick={()=>setBscStateText(bscBalance)}>Max</button>\n                                \n                                <button class=\"btn btn-success\" type=\"button\" onClick={stakeBSCToken} >Stake</button>\n                            </div>\n\n\n                           </div>\n\n                            </div>\n\n\n\n                       </div>\n                       <p className=\"text-center\">Wallet Balance: {bscBalance} $BUSD </p>\n                   </div>\n               </div>\n\n               <div className=\"col-md-4\">\n               <div className=\"div-card\">\n                    <div className=\"div-one\">\n\n                      <p className=\"heading\">STAKE $OINK</p>\n                            \n                           <p>\n                              Stake $OINK to earn more $DUCK\n                              You can stake as many times as you want\n                              You can unstake your $DUCK after 7 days\n                           </p>\n                       </div>\n\n\n                       <div className=\"div-two\">\n                         <p>APR <span>1460%</span></p>\n                         <p>My Stake <span>{myOinkStake} OINK</span></p>\n                         <p>Total Staked <span>{totalStakedToken} OINK</span></p>\n                       </div>\n                       <div className=\"div-three\">\n                            <p className=\"float-right\">\n                              <button className=\"btn btn-success\" onClick={unstackedToken}>\n                                   unstaked\n                              </button>\n                            \n                            </p>\n\n\n                            <p className=\"heading\">$OINK Earned</p>\n\n                            <div className=\"d-flex justify-content-between\">\n                               <p className=\"para-details align-self-center\">\n                                 {userUnclaimedToken}\n                               </p>\n\n                               <p>\n                                 <button className=\"btn btn-primary\" \n                                   onClick={claimOinkTokensStaked} type=\"button\">\n                                    Claim\n                                 </button>\n                               </p>\n                            </div>\n\n                           \n\n\n                            <div>\n                                <p>No Minimum Amount</p>\n                                  \n                             \n                           <div class=\"input-group\">\n                             \n                               <input type=\"text\" type=\"number\" value={tokenToStake}\n                                   className=\"form-control\" onChange={\n                                     (e)=>setTokenToStake(e.target.value)\n                                   }/>\n\n                               <button class=\"btn btn-primary\" type=\"button\" onClick={()=>setTokenToStake(bscBalance)} type=\"button\">\n                                    MAX</button>\n                                \n                                <button class=\"btn btn-success\" type=\"button\"  onClick={stakeOinkToken} type=\"button\">\n                                    STAKE\n                                </button>\n                            </div>\n\n                            </div>\n\n\n\n                       </div>\n                       <p className=\"text-center\">Wallet Balance: {bscBalance} $BUSD </p>\n                   </div>\n                </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                <div className=\"col-md-4\">\n                <div className=\"div-card\">\n                       <div className=\"div-one\">\n\n                           <p className=\"heading\">SELL $OINK</p>\n                            \n                           <p>\n                             Sell the earned tokens\n                             Only 40000 tokens can be sold per day\n                             Earn $BUSD\n                           </p>\n                       </div>\n                       \n\n\n\n                       <div className=\"div-two\">\n                         <p>Sold Today <span>{totalSoldToday}</span></p>\n                         <p>Available Today <span>{totalAvailableToSell}</span></p>\n                         <p>Reset in <span>{getTimeToNextDay}</span></p>\n                       </div>\n                       <div className=\"div-three\">\n                           \n                           <div className=\"text-center\">\n                              <p>$OINK PRICE</p>\n\n                              <p> {tokenPrice} $BUSD</p>\n                           </div>\n                           \n                          \n                          <p>You will get</p>\n                                   \n                            <div class=\"input-group\">\n                             \n                                 <input type=\"text\" type=\"number\" value={oinkToSell}\n                                   className=\"form-control\" onChange={\n                                     (e)=>setOinkToSell(e.target.value)\n                                   }/>\n\n                                \n                              <button className=\"btn btn-success\" \n                                   onClick={sellOinkToken} type=\"button\">\n                                    SELL\n                                 </button>\n                            </div>\n\n\n\n                       </div>\n                       <p className=\"text-center\">Wallet Balance: {bscBalance} $BUSD </p>\n                   </div>\n                </div>\n\n              \n\n           </div>\n      </div>\n    </div>\n    </div>\n    </AppStyles>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}